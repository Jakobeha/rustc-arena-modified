name: CI

on: [push, pull_request]

env:
  CARGO_TERM_COLORS: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  RUST_BACKTRACE: short
  RUSTFLAGS: -Dwarnings
  RUSTDOCFLAGS: -Dwarnings

jobs:
  # Test on a few targets, stable, beta
  test:
    name: Tests - ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - run: cargo check --all-features --verbose
      - run: cargo test --all-features --verbose
    strategy:
      fail-fast: false
      matrix:
        name:
          - linux
          - macos
          - win64
          - win32
          - beta
          - nightly
          - msrv
        include:
          - name: linux
            os: ubuntu-latest
            toolchain: stable
          - name: macos
            os: macos-latest
            toolchain: stable
          - name: win64
            os: windows-latest
            toolchain: stable
          - name: beta
            os: ubuntu-latest
            toolchain: beta
          - name: nightly
            os: ubuntu-latest
            toolchain: nightly
          - name: msrv
            os: ubuntu-latest
            toolchain: '1.69.0'

  # Check documentation links (we have `-Dwarnings` in RUSTFLAGS and RUSTDOCFLAGS above)
  doc:
    name: Check documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo doc --all-features

  # Check formatting
  rustfmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check
      - run: cargo fmt --all -- --check
        working-directory: ./benches

  # Lint
  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: clippy
      - name: Clippy Check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -D warnings

  # Check unsafe
  miri:
    name: Miri
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: miri, rust-src
      - run: cargo miri test --all-features

  # Check benchmarks
  benches:
    name: Benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      # Use a cache for this both because the builds are slow, and because it
      # allows criterion to take a (very low quality) guess about perf changes.
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            benches/target
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-benches-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-benches-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-benches-
            ${{ runner.os }}-
      - name: Build benchmarks
        run: cargo bench --no-run
        working-directory: ./benches
      - name: Run benchmarks
        run: cargo bench
        working-directory: ./benches